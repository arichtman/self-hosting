version: "3.3"
services:

  reverse-proxy:
    container_name: proxy
    hostname: traefik
    image: traefik:v2.3
    restart: always
    command:
      # - "--log.level=DEBUG"
      - "--api.insecure=${TRAEFIK_API_INSECURE_ENABLED}"
      - "--providers.docker=true"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - 80:80
      - 8080:8080 # needed for dashboard
      - "443:443" # needed for httpS
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${BASE_DATA_LOCATION}/proxy/traefik.yaml:/etc/traefik.yaml
      - ${BASE_DATA_LOCATION}/letsencrypt/acme.json:/letsencrypt/acme.json
    networks:
      - web

  website:
    container_name: website
    hostname: nginx
    image: nginx:alpine
    restart: always
    expose:
      - 80
    networks:
      - web
    volumes:
      - ${BASE_DATA_LOCATION}/website:/usr/share/nginx/html
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website.rule=Host(`${MY_DOMAIN}`)"
      - "traefik.http.routers.website.tls.certresolver=myresolver"
      - "traefik.http.routers.website.entrypoints=websecure"
    depends_on:
      - reverse-proxy

networks:
  web:
